<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerAuto.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAChdAoAoXUKEaF0Cn6gcgreoHAK/aBuCv+fbAn/n2oJ/55oCf+eZgn/nWMJ/51hCf+cXwn/nF0I/5tb
        CP+bWQj/m1cI/5pVCP+aUwj/mVAI/5lOB/+YTAf/mEoH/5dIB/+XRgf/lkQH/5ZCBv+WQAb9lT0G3pU7
        Bn6UOQYRlDcGAKF1ChChdAqdoHIK/KBwCv+gbgr/n2wJ/59qCf+eaAn/nmYJ/51kCf+dYgn/nF8J/5xd
        CP+bWwj/m1kI/5tXCP+aVQj/mlMI/5lRCP+ZTwf/mEwH/5hKB/+XSAf/l0YH/5dEB/+WQgf/lkAG/5U+
        Bv+VPAb/lDkG/JQ3Bp2TNQYQoXQKe6ByCvygcAr/oG4K/59sCf+fagn/nmgJ/55mCf+dZAn/nWIJ/5xf
        Cf+cXQj/m1sI/5tZCP+bVwj/mlUI/5pTCP+ZUQj/mU8H/5hMB/+YSgf/l0gH/5dGB/+XRAf/lkIH/5ZA
        Bv+VPgb/lTwG/5Q5Bv+UNwb/kzUG/JMzBnqgcgrZoHAK/6BuCv+fbAn/n2oJ/55oCf+eZgn/nWQJ/51i
        Cf+cXwn/nF0I/5tbCP+bWQj/m1cI/5pVCP+aUwj/mVEI/5lPB/+YTAf/mEoH/5dIB/+XRgf/l0QH/5ZC
        B/+WQAb/lT4G/5U8Bv+UOQb/lDcG/5M1Bv+TMwX/kzEF2aBwCvigbgr/n2wJ/59qCf+eaAn/nmYJ/51k
        Cf+dYgn/nF8J/5xdCP+bWwj/m1kI/5tXCP+aVQj/mlMI/5lRCP+ZTwf/mEwH/5hKB/+XSAf/l0YH/5dE
        B/+WQgf/lkAG/5U+Bv+VPAb/lDkG/5Q3Bv+TNQb/kzMF/5IxBf+SLwX4oG4K+p9sCf+fagn/nmgJ/55m
        Cf+dZAn/nWIJ/5xfCf+cXQj/m1sI/5tZCP+bVwj/mlUI/5pTCP+ZUQj/mU8H/5hMB/+YSgf/l0gH/5dG
        B/+XRAf/lkIH/5ZABv+VPgb/lTsG/5Q5Bv+UNwb/kzUG/5MzBf+SMQX/ki8F/5ItBfqfbAn6n2oJ/55o
        Cf+eZgn/nWQJ/51iCf+cXwn/nF0I/5tbCP+bWQj/m1cI/5pVCP+aUwj/mVEI/5lPB/+YTAf/mEoH/5dI
        B/+XRgf/l0QH/5ZCB/+WQAb/lT4G+pU8BpWUOgZ8lDcG6pM1Bv+TMwX/kjEF/5IvBf+SLQX/kSsF+p9q
        CfqeaAn/nmYJ/51kCf+dYgn/nF8J/5xdCP+bWwj/m1kI/5tXCP+aVQj/mlMI/5lRCP+ZTwf/mEwH/5hK
        B/+XSAf/l0YH/5dEB/+WQgf/lkAG/5U+Bv+VPAbplTsGKJQ5BgCTNQZZkzMF65IxBf+SLwX/ki0F/5Er
        Bf+RKQX6nmgJ+p5mCf+dZAn/nWIJ/5xfCf+cXQj/m1sI/5tZCP+bVwj/mlUI/5pTCP+ZUQj/mU8H/5hM
        B/+YSgf/l0gH/5dGB/+XRAf/lkIH/5ZABv+VPgb/lTsG/5Q5Bv+UNwaYkzQGD5I1BgCSMQVZki8F65It
        Bf+RKwX/kSkF/5AnBfqeZgn6nWQJ/51iCf+cXwn/nF0I/5tbCP+bWQj/m1cI/5pVCP+aUwj/mVEI/5lP
        B/+YTAf/mEoH/5dIB/+XRgf/l0QH/5ZCB/+WQAb/lT4G/5U8BtSUOgatlDgGrpM2BqqTNAZIkzUHAJMv
        BgCSLQVZkSsF6pEpBf+QJgX/kCQE+p1jCfqdYgn/nF8J/5xdCP+bWwj/m1kI/5tXCP+aVQj/mlMI/5lR
        CP+ZTwf/mEwH/5hKB/+XSAf/l0YH/5dEB/+WQgf/lkAG/5U+Bv+VPAbslTsGN5U2BgCXRAoBlD0IAZQ2
        BgOTMwUAki4FAJEnBQCRKAWIkCYF/5AkBP+PIgT6nWEJ+pxfCf+cXQj/m1sI/5tZCP+bVwj/mlUI/5pT
        CP+ZUQj/mU8H/5hMB/+YSgf/l0gH/5dGB/+XRAf/lkIH/5ZABv+VPgb/lTwG/5Q5BvSUNwZpkzQGKpMy
        BSuSMAUtki4FHJIpBQCQJgUAkCcFDpAmBaqQJAT/jyIE/48gBPqcXwn6nF0I/5tbCP+bWQj/m1cI/5pV
        CP+aUwj/mVEI/5lPB/+YTAf/mEoH/5dIB/+XRgf/l0QH/5ZCB/+WQAb/lT4G/5U8Bv+UOQb/lDcG/5M1
        BviTMwXrkjEF7JIvBdKSLgVBkSoFAJAnBQ6QJgWZkCQE/Y8iBP+PIAT/jh4E+pxdCPqbWwj/m1kI/5tX
        CP+aVQj/mlMI/5lRCP+ZTwf/mEwH/5hKB/+XSAf/l0YH/5dEB/+WQgf/lkAG/5U+Bv+VPAb/lDkG/5Q3
        Bv+TNQb/kzMF/5IxBf+SLwX2ki4FXJEpBQCQJwUOkCYFmZAkBP6PIgT/jyAE/44eBP+OHAT6m1sI+ptZ
        CP+bVwj/mlUI/5pTCP+ZUQj/mU8H/5hMB/+YSgf/l0gH/5dGB/+XRAf/lkIH/5ZABv+VPgb/lTwG/5Q5
        Bv+UNwb/kzUG/5MzBf+SMQX/ki8F/5ItBeuRKwU1kCYFEZAmBZmQJAT+jyIE/48gBP+OHgT/jhwE/44a
        BPqbWQj6m1cI/5pVCP+aUwj/mVEI/5lPB/+YTAf/mEoH/5dIB/+XRgf/l0QH/5ZCB/+WQAb/lT4G/5U8
        Bv+UOQb/lDcG/5M1Bv+TMwX/kjEF/5IvBf+SLQX/kSsF/5EoBdKQJgXGkCQE/Y8iBP+PIAT/jh4E/44c
        BP+OGgT/jRgE+ptXCPqaVQj/mlMI/5lRCP+ZTwf/mEwH/5hKB/+XSAf/l0YH/5dEB/+WQgf/lkAG/5U+
        Bv+VPAb/lDkG/5Q3Bv+TNQb/kzMF/5IxBf+SLwX/ki0F/5ErBf+RKQX/kCYF/5AkBP+PIgT/jyAE/44e
        BP+OHAT/jhoE/40YBP+NFgP7mlUI+ppTCP+ZUQj/mU8H/5hMB/+YSgf/l0gH/5dGB/+XRAf/lkIH/5ZA
        Bv+VPgb/lTwG/5Q5Bv+UNwb/kzUG/5MzBf+SMQX/ki8F/5ItBf+RKwX/kSkF/5AmBf+QJAT/jyIE/48g
        BP+OHgT/jhwE/44aBP+NGAT/jRUD/4wUA/KaUwj6mVEI/5lPB/+YTAf/mEoH/5dIB/+XRgf/l0QH/5ZC
        B/+WQAb/lT4G/5U8Bv+UOQb/lDcG/5M1Bv+TMwX/kjEF/5IvBf+SLQX/kSsF/5EpBf+QJgX/kCQE/48i
        BP+PIAT/jh4E/44cBP+OGgT/jRgE/40WA/+MEwP/jBIDvplQB/qZTwf/mEwH/5hKB/+XSAf/l0YH/5dE
        B/+WQgf/lkAG/5U+Bv+VPAb/lDkG/5Q3Bv+TNQb/kzMF/5IxBf+SLwX/ki0F/5ErBf+RKQX/kCYF/5Ak
        BP+PIgT/jyAE/44eBP+OHAT/jhoE/40YBP+NFgP/jBMD/4wRA+uMEQNNmU4H+phMB/+YSgf/l0gH/5dG
        B/+XRAf/lkIH/5ZABv+VPgb/lTwG/5Q5Bv+UNwb/kzUG/5MzBf+SMQX/ki8F/5ItBf+RKwX/kSkF/5Am
        Bf+QJAT/jyIE/48gBP+OHgT/jhwE/44aBP+NGAT/jRYD/4wTA/+MEgPhixADX4gMAwGYTAf6mEoH/5dI
        B/+XRgf/l0QH/5ZCB/+WQAb/lT4G/5U8Bv+UOQb/lDcG/5M1Bv+TMwX/kjEF/5IvBf+SLQX/kSsF/5Ep
        Bf+QJgX/kCUFyY8jBJyPIQSdjx4EnY4cBJ2OGgSdjRgEnY0WA9mMEwP/jBIDu4wRAyyQFwMAixADAJhK
        B/iXSAf/l0YH/5dEB/+WQgf/lkAG/5U+Bv+VPAb/lDkG/5Q3Bv+TNQb/kzMF/5IxBf+SLwX/ki0F/5Er
        Bf+RKQX/kCYF/5AkBOiQJAQ1kSUEAJWwAAC5mgAAi40AAJhMAACKFwEAjBMDnIwRA/+LEAOQjBEDAIsP
        AwCLEAMAl0gH2ZdGB/+XRAf/lkIH/5ZABv+VPgb/lTwG/5Q5Bv+UNwb/kzUG/5MzBf+SMQX/ki8F/5It
        Bf+RKwX/kSkF/5AmBf+QJAT/jyMEjY8bBQCOGwQAjRkEAI0XBACMFQMAjBMDAIUIBACMEQOciw8D/4sO
        A5KLEAMAig0DAAAAAACXRgd7l0QH/JZCB/+WQAb/lT4G/5U8Bv+UOQb/lDcG/5M1Bv+TMwX/kjEF/5Iv
        Bf+SLQX/kSsF/5EpBf+QJgX/kCQE/48iBNuPIgQmjhwEHI4bBECNGQRBjRcEQYwVAz6MEwMViw8DAIsP
        A5yLDQP/igwDkosOAwCKCwMAAAAAAJZEBxGWQgeflkAG/pU+Bv+VPAb/lDkG/5Q3Bv+TNQb/kzMF/5Ix
        Bf+SLwX/ki0F/5ErBf+RKQX/kCYF/5AkBP+PIgTqjyEEWI4cBA6OGwS7jhoE+o0YBPiNFQP4jBMD+owR
        A5qMEAMDiw0Dm4oLA/+KCQOSigwDAIoJAwAAAAAAlkIHAJZABhCVPgZwlTwG25Q5Bv+UNwb1kzUG4ZMz
        BuGTMQXhki8F4ZItBeGRKwXhkSkF4ZAnBeGQJQXYjyMEqY8hBEKJHgMAjhwEC44aBKCNGATjjRYD4YwU
        A+GMEQPiixADgosRAwGKCgObigkD/4oHA5KKCgMAigcDAAAAAACWQAYAlkAGAJU7BgCUOQaHlDcG/5M2
        BrSTNAYhkzIFH5IwBSCSLgUgkSwFIJEqBSCRKAUgkCUFIJAkBBmPIgQFjyIEAI8hBACNGQQAjRgEDI0X
        BB+MFQMgjBIDIIsQAx6LDwMIiQcCAIoIA5uJBwL/iQUCkokHAgCJBQIAAAAAAJU9BgCWQQYAlDYGAJQ3
        BneTNQb/kzMGwpMyBQuSLgUAkSwFAJEqBQCQKAUAkCYEAJAjBACPIQQAjx8EAI4bBACNGQQAjRcEAIwU
        AwCMEwMAjBMDAIsQAwCLDgMAiwwDAIoIAwCJBwIIiQYCt4kFAv+JAwKFiQQCAIkDAgAAAAAAAAAAAJQ3
        BgCTNAYAkzUGP5MzBfKSMQX6ki8Fk5EsBUWRKgVBkCgFQZAlBUGQIwRBjyEEQY8fBEGOHQRBjhsEQY0Z
        BEGNFwRBjBUDQYwSA0GLEANBiw4DQYsMA0GKCgNBiggDRIkGAouJBQL3iQMC94gCAkuIAgIAigQDAAAA
        AAAAAAAAlDYGAJMzBQCTNAUFkjEFipIvBfySLQX/kSsF+JEoBfaQJgX2kCQE9o8iBPaPIAT2jh4E9o4c
        BPaNGgT2jRgE9o0VA/aMEwP2jBED9osPA/aLDQP2igsD9ooJA/aJBwL4iQUC/4kDAv6IAQKWiAACCYgB
        AgCHAwIAAAAAAAAAAAAAAAAAkzMFAJIwBQCSLwUOki0FfZErBeKRKQX+kCcF/5AkBP+PIgT/jyAE/44e
        BP+OHAT/jhoE/40YBP+NFgP/jBQD/4wRA/+LDwP/iw0D/4oLA/+KCQP/iQcC/4kFAv+JAwLmiAEChogA
        AhKIAQIAiAECADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAGAAAABgAAAAcAAAAE=
</value>
  </data>
</root>